model {
    # Regression before any confinement measure (populations are in log scale)
    for(t in (t0 + 1):(tq)) {
        I[t] ~ dnorm(I0 + (beta - rmu) * (t - t0), tauI) # Active cases
        y[t] ~ dnorm(I0 + (beta - rmu) * (t - t0), tauI) # Posterior predictive
    }
    # Regression for active cases post-confinement (populations are in log scale)
    for(t in (tq + 1):tmax) {
        I[t] ~ dnorm(Iq + ((beta * q) / (p + q) ^ 2 * (1 - exp(-(p + q) * (t - tq))) +
                    (beta - rmu - beta * q / (q + p)) * (t - tq)), tauI)
    }
    # Posterior predictive for active cases post-confinement (extended until tf)
    for(t in (tq + 1):tf) {
        y[t] ~ dnorm(y[tq] + ((beta * q) / (p + q) ^ 2 * (1 - exp(-(p + q) * (t - tq))) +
                    (beta - rmu - beta * q / (q + p)) * (t - tq)), tauI)
    }
    # Regression for new death+recovered cases
    for(t in tX0:tmax) {
        X[t] ~ dnorm(log(rmu) + I[t], tauX)  # New Deaths + Recovered
    }
    # Posterior predictive for new deaths+recovered (extended until tf)
    for(t in (tX0):tf) {
        z[t] ~ dnorm(log(rmu) + y[t], tauX)
    }
    # Priors for parameters
    p ~ dunif(p0, p1)  # Non-informative prior
    q ~ dunif(q0, q1)  # Non-informative prior
    beta ~ dunif(b0, b1)  # Doubling time is less than 1 per day (informative prior)
    rmu ~ dunif(r0, r1)  # rmu is lower than beta (so R0>1) (informative prior)
    # Priors for precisions (inverse of variance)
    tauI ~ dgamma(tauI0, tauI1)  # Non-informative prior
    tauX ~ dgamma(tauX0, tauX1)  # Non-informative prior
    y[t0] <- I0
}
